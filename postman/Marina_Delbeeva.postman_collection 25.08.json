{
	"info": {
		"_postman_id": "9d5fdd65-8fc3-4a33-ad0a-02568e3ee5e9",
		"name": "Marina_Delbeeva",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "CreateBoard",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"\r",
							"pm.test(\"Response must be valid\", function () {\r",
							"     pm.response.to.be.ok; \r",
							"});\r",
							"\r",
							"pm.test(\"Board has the provided name\", function () {\r",
							"    pm.expect(jsonData.name).to.equal(pm.environment.get(\"initBoardName\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Description is empty\", function () {\r",
							"    pm.expect(jsonData.desc).is.empty;\r",
							"});\r",
							"\r",
							"pm.collectionVariables.set(\"idBoard\", jsonData.id);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/boards/?key={{key}}&token={{token}}&name={{initBoardName}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"boards",
						""
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "name",
							"value": "{{initBoardName}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "ChangeBoard",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 1 sec\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							"",
							"pm.test(\"Name of board was updated\", function () {",
							"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"updatedBoardName\"));",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/boards/{{idBoard}}?key={{key}}&token={{token}}&name={{updatedBoardName}}&desc={{desc}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"boards",
						"{{idBoard}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "name",
							"value": "{{updatedBoardName}}"
						},
						{
							"key": "desc",
							"value": "{{desc}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GetBoard",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response should contain correct name of board\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"updatedBoardName\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.collectionVariables.set(\"idBoard\", jsonData.id);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/boards/{{idBoard}}?key={{key}}&token={{token}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"boards",
						"{{idBoard}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateList",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 1 sec\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains list name\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(pm.environment.get(\"listName\"));\r",
							"});\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"pm.collectionVariables.set(\"idList\", jsonData.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "",
							"type": "string"
						},
						{
							"key": "password",
							"value": "",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/boards/{{idBoard}}/lists?key={{key}}&token={{token}}&name={{listName}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"boards",
						"{{idBoard}}",
						"lists"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "name",
							"value": "{{listName}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "AddCardToList",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const dateNow = new Date();\r",
							"pm.environment.set('currentDate', dateNow.toISOString());"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response should contain valid id of the board\", function () {\r",
							"    pm.response.to.have.jsonBody(\"idBoard\", pm.collectionVariables.get(\"idBoard\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 1 sec\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.collectionVariables.set(\"idCard\", jsonData.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/cards?key={{key}}&token={{token}}&due={{currentDate}}&idList={{idList}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"cards"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "due",
							"value": "{{currentDate}}"
						},
						{
							"key": "idList",
							"value": "{{idList}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdateCard",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 1 sec\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/cards/{{idCard}}?key={{key}}&token={{token}}&name={{cardName}}&desc={{desc}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"cards",
						"{{idCard}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "name",
							"value": "{{cardName}}"
						},
						{
							"key": "desc",
							"value": "{{desc}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "ArchiveList",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"\r",
							"pm.test(\"Response should contain value Closed as True\", function () {\r",
							"    pm.expect(jsonData.closed).to.eql(true);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 1 sec\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/lists/{{idList}}/closed?key={{key}}&token={{token}}&value=true",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"lists",
						"{{idList}}",
						"closed"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "value",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteBoard",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 1 sec\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							"",
							"pm.test(\"Value = null\", function () {",
							"",
							"    pm.expect(jsonData._value).is.null;",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/boards/{{idBoard}}?key={{key}}&token={{token}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"boards",
						"{{idBoard}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GetBoards",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 1 sec\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"There are no boards created during this test\", function () {\r",
							"    pm.expect(pm.response.text()).not.to.include(pm.environment.get(\"initBoardName\"));\r",
							"    pm.expect(pm.response.text()).not.to.include(pm.environment.get(\"updatedBoardName\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/members/{{email}}/boards?key={{key}}&token={{token}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"members",
						"{{email}}",
						"boards"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api.trello.com"
		},
		{
			"key": "id",
			"value": ""
		},
		{
			"key": "key",
			"value": "094987b4f24ea9d62d511436279272eb"
		},
		{
			"key": "token",
			"value": "cf57f26819d625a11d7d514515bec6c0032151bfe43086b277144af589b4e5fe"
		},
		{
			"key": "idBoard",
			"value": ""
		},
		{
			"key": "idList",
			"value": ""
		},
		{
			"key": "idCard",
			"value": ""
		},
		{
			"key": "cardName",
			"value": "Card has name now"
		},
		{
			"key": "desc",
			"value": "Lorem ipsum"
		}
	]
}